---
import Layout from '../../layouts/Layout.astro';
import Image from 'astro/components/Image.astro';
import { getCollection } from 'astro:content';
import logoFinal from '../../images/logofinal.jpg';

export async function getStaticPaths() {
  const plants = await getCollection('plants');
  return plants.map((plant) => ({
    params: { id: plant.data._id },
    props: { plant: plant.data },
  }));
}

const { plant } = Astro.props;

const { medias, name, price, type, _id } = plant;

// Group type array into pairs
const groupedTypes = type.reduce((acc: any[], curr: any, i: number) => {
  if (i % 2 === 0) {
    acc.push([curr]);
  } else {
    acc[acc.length - 1].push(curr);
  }
  return acc;
}, []);
// Obtener la primera imagen del array medias
export const prerender = true;
---

<Layout title={`${plant.name} - Plants hub`}>
  <div class="container mx-auto px-2 lg:px-0">
    <div class="flex flex-col lg:flex-row gap-4">
      <div class="flex flex-col lg:flex-row gap-4 lg:w-1/2">
        <div class="w-full lg:w-1/2 block lg:hidden">
          <h1 class="text-2xl text-white font-semibold">{plant.name}</h1>
        </div>
        <div class="w-full">
          {
            plant.medias.length > 0 ? (
              <Image
                src={plant.medias[0].filename}
                alt={plant.name}
                width={400}
                height={300}
                transition:name={`${_id}-img`}
                class="w-full h-full max-h-[300px] lg:max-h-[50vh] object-contain rounded-xl"
              />
            ) : (
              <Image
                src={logoFinal}
                alt="logo"
                width={400}
                height={300}
                transition:name={`${_id}-img`}
                class="w-full h-full object-cover"
              />
            )
          }
        </div>
      </div>
      <div class="flex flex-col gap-4 mt-4 px-6 lg:px-0 lg:w-1/2 py-0 lg:py-10">
        <div class="w-full hidden lg:block">
          <h1 class="text-4xl font-semibold text-white">{plant.name}</h1>
        </div>
        <div class="w-full">
          <h3 class="text-accent text-4xl font-semibold">
            {
              Number(price).toLocaleString('es-CO', {
                style: 'currency',
                currency: 'COP',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0,
              })
            }
          </h3>
        </div>
        <div class="flex flex-col gap-2 lg:gap-4">
          <div class="w-full lg:w-1/2">
            <h3 class="text-accent text-base font-medium">
              Tipos de plantas
            </h3>
          </div>
          {
            groupedTypes.map((group: any) => (
              <div class="flex flex-col">
                {group.map((t: any) => (
                  <div class="flex gap-2 text-accent text-base border-b border-white/20 pt-2">
                    <span>{t.name}</span>
                    <span>-</span>
                    <span>
                      {Number(t.price).toLocaleString('es-CO', {
                        style: 'currency',
                        currency: 'COP',
                        minimumFractionDigits: 0,
                        maximumFractionDigits: 0,
                      })}
                    </span>
                  </div>
                ))}
              </div>
            ))
          }
          <div class="w-full lg:w-1/2 mt-0 lg:mt-4 flex justify-end lg:justify-start">
            <button
              class="quote-btn text-base px-4 py-2 text-white bg-button rounded-xl border-primary shadow hover:bg-button/50 cursor-pointer"
              data-id={`${_id}`}
              >Cotizar</button
            >
          </div>
        </div>
        
      </div>
    </div>
  </div>
</Layout>
<script>
  const quotationItems = JSON.parse(localStorage.getItem('quotationItems') || '[]');
  const btnsQuote = document.querySelectorAll(".quote-btn");
  

  btnsQuote.forEach((btn)=>{
    if(quotationItems.includes(btn.getAttribute('data-id'))){
      btn.textContent = 'Agregado';
        btn.classList.remove('bg-button');
        btn.classList.add('bg-green-500');
        btn.classList.add('hover:bg-green-600');
    }
    btn.addEventListener("click",()=>{
      let quotationItems = JSON.parse(localStorage.getItem('quotationItems') || '[]');
      const _id = btn.getAttribute('data-id');
      if(quotationItems.includes(_id)){
        quotationItems.splice(quotationItems.indexOf(_id), 1);
      }else{
        quotationItems.push(_id);
      }
      localStorage.setItem('quotationItems', JSON.stringify(quotationItems));
      if(quotationItems.includes(_id)){
        btn.textContent = 'Agregado';
        btn.classList.remove('bg-button');
        btn.classList.add('bg-green-500');
        btn.classList.add('hover:bg-green-600');
      }else{
        btn.textContent = 'Cotizar';
        btn.classList.remove('bg-green-500', 'hover:bg-green-600');
        btn.classList.add('bg-button');
      }
    });
  });
</script>